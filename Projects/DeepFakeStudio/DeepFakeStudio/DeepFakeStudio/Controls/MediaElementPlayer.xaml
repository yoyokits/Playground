<UserControl
    x:Class="DeepFakeStudio.Controls.MediaElementPlayer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:DeepFakeStudio.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <media:MediaElementWrapper
            x:Name="MediaElement"
            Grid.Row="0"
            Grid.RowSpan="3"
            LoadedBehavior="Play"
            MediaFailed="MediaElement_MediaFailed"
            ScrubbingEnabled="True"
            Stretch="Uniform" />

        <Grid
            Grid.Row="2"
            VerticalAlignment="Bottom"
            Background="{DynamicResource {x:Static media:Brushes.SemiTransparentBackgroundBrushKey}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Slider
                x:Name="ProgressSlider"
                Grid.Row="0"
                media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}"
                Maximum="{Binding ElementName=MediaElement, Path=Length, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}"
                Minimum="0"
                Style="{StaticResource {x:Static media:Styles.ProgressSliderStyleKey}}"
                Value="{Binding ElementName=MediaElement, Path=Position, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}" />

            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type Button}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ToggleButton
                    x:Name="PlayPauseButton"
                    Grid.Column="0"
                    IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PauseGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PlayGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton
                    x:Name="ToggleMutedButton"
                    Grid.Column="1"
                    IsChecked="{Binding ElementName=MediaElement, Path=IsMuted, Converter={x:Static converters:InvertBoolConverter.Instance}}"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.UnMuteGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.MuteGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <TextBlock
                    x:Name="ProgressTextBlock"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Foreground="{Binding ElementName=ToggleMutedButton, Path=Foreground}"
                    Opacity="{Binding ElementName=ToggleMutedButton, Path=Opacity}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} / {1}">
                            <Binding
                                Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                ElementName="MediaElement"
                                Path="Position" />
                            <Binding
                                Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                ElementName="MediaElement"
                                Path="Length" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <Button Grid.Column="4" Command="ApplicationCommands.Open">
                    <Button.ToolTip>
                        <ToolTip Placement="Top" Style="{DynamicResource {x:Static media:Styles.ToolTipStyleKey}}">
                            Open a file
                        </ToolTip>
                    </Button.ToolTip>
                    <materialDesign:PackIcon Kind="FolderOpen" />
                </Button>

                <Button
                    Grid.Column="5"
                    Padding="12,6,6,6"
                    HorizontalAlignment="Right"
                    Command="media:Commands.ToggleFullScreen"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <Button.ToolTip>
                        <ToolTip Placement="Top" Style="{DynamicResource {x:Static media:Styles.ToolTipStyleKey}}">
                            Full screen
                        </ToolTip>
                    </Button.ToolTip>
                    <materialDesign:PackIcon Kind="Fullscreen" />
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>